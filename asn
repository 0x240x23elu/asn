#!/usr/bin/env bash

################################################################################################################
# ---------------------------------------------------------------------------
# ASN/IPv4/IPv6/Prefix lookup tool. Uses Team Cymru's whois service for data.
# ---------------------------------------------------------------------------
# example usage:
#  asn <ASnumber>      -- to lookup matching ASN data. Supports "as123" and "123" formats (case insensitive)
#  asn <IPv4/IPv6>     -- to lookup matching route(4/6) and ASN data
#  asn <ROUTE>         -- to lookup matching ASN data
#  asn <host.name.tld> -- to lookup matching IP(v4/v6), route and ASN data (supports multiple IPs - e.g. DNS RR)
#
# Author: Adriano Provvisiero - BV Networks 2017-2020
#
################################################################################################################

WhoisASN(){
        found_asname=$(whois -h whois.cymru.com " -f -w -c -p as$1" | sed -e 's/\ *|\ */|/g' | awk -F '[|]' {'print $3'})
        printf "\n${red}[AS$1] ${green}$found_asname\n${white}\n"
}

WhoisIP(){
        printf "${white}%${longest}s -> ${yellow}(route: %20s) ${white}-> ${red}[AS%s] ${green}%s\n" "$1" "$found_route" "$found_asn" "$found_asname"
}

LookupASNAndRouteFromIP(){
        found_route=""
        found_asn=""
        found_asname=""
        output=$(whois -h whois.cymru.com " -f -p $1" | sed -e 's/\ *|\ */|/g')
        found_asn=$(echo $output | awk -F'[|]' {'print $1'})
        found_asname=$(echo $output | awk -F'[|]' {'print $4'})
        found_route=$(echo $output | awk -F'[|]' {'print $3'})
        [[ "$found_asname" == "NA" ]] && found_asname=""
        [[ "$found_route" == "NA" ]] && found_route=""
}

ResolveHostnameToIPList(){
        ip=$(host $1 | grep -Eo $ipv4v6regex)
        echo -e "$ip\n"
}

PrintUsage(){
        echo -e "\n${yellow}Example usage:\n"
        echo -e "\t${green}$0 <ASnumber>${white}\t-- to lookup matching ASN data. Supports \"as123\" and \"123\" formats (case insensitive)"
        echo -e "\t${green}$0 <IPv4/IPv6>${white}\t-- to lookup matching route and ASN data"
        echo -e "\t${green}$0 <ROUTE>${white}\t\t-- to lookup matching ASN data"
        echo -e "\t${green}$0 <host.name.tld>${white}\t-- to lookup matching IP, route and ASN data (supports multiple IPs - e.g. DNS RR)\n"
}

green="\e[32m"
yellow="\e[33m"
white="\e[97m"
blue="\e[94m"
red="\e[31m"
ipv4v6regex='[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}|(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|'\
'([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|'\
'([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|'\
':((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|'\
'(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|'\
'1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))' # cheers https://stackoverflow.com/a/17871737

# Check cmdline parameters
if [[ $# -ne 1 ]]; then
        PrintUsage
        exit 1
fi

# Check prerequisites
if [ -z $(command -v "whois") ]; then
        echo -e "\n${red}ERROR: ${white}program '${red}whois${white}' not found on this system.\nPlease install it (for example with ${green}sudo apt install whois${white} on Debian-based linux distributions)\n"
        exit 1
fi
if [ -z $(command -v "host") ]; then
        echo -e "\n${red}ERROR: ${white}program '${red}host${white}' not found on this system.\nPlease install it (for example with ${green}sudo apt install bind9-host${white} on Debian-based linux distributions)\n"
        exit 1
fi

input=$(echo $1 | sed -e 's/\/.*//g' | grep -Eo $ipv4v6regex)
if [ -z "$input" ]; then
        # Input is not an IP Address. Check if it is a number (ASN)
        asn=$(echo $1 | sed -e 's/[a|A][s|S]//g' | grep -E "^[0-9]*$")
        if [ -z "$asn" ]; then
                # Input is not an ASN either. Consider it a hostname and try to resolve it.
                echo -e -n "\n${blue}Resolving \"$1\"... "
                ip=$(ResolveHostnameToIPList $1)
                if [ -z "$ip" ]; then
                        echo -e "\e[30m\e[101mError: unable to resolve hostname\e[39m\e[49m\n"
                        tput sgr0
                        exit 1
                fi
                numips=$(echo "$ip" | wc -l)
                [[ $numips = 1 ]] && s="" || s="es"
                echo -e "${blue}$numips IP address$s found:"
                # grab the longest IP to properly size output padding
                longest=0
                for singleip in $ip; do
                        [[ ${#singleip} -gt $longest ]] && longest=${#singleip}
                done
                let longest=$longest+1
                # output actual results
                for singleip in $ip; do
                        LookupASNAndRouteFromIP $singleip
                        WhoisIP $singleip
                done
                tput sgr0
                echo ""
                exit 0
        else
                # Input is an ASN
                WhoisASN $asn
                tput sgr0
                exit 0
        fi
else
        # Input is an IP address
        LookupASNAndRouteFromIP $input
        if [ -z "$found_asname" ] && [ -z "$found_route" ]; then
                echo -e "\n\e[30m\e[101mError: no data found for $input\e[39m\e[49m\n"
                tput sgr0
                exit 0
        fi
        echo -e "\n${green}1 IP address found:\e[39m"
        let longest=${#input}+1
        WhoisIP $input
        tput sgr0
        echo ""
        exit 0
fi